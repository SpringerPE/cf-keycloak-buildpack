#!/usr/bin/env bash
set -euo pipefail
# https://docs.cloudfoundry.org/buildpacks/understand-buildpacks.html

# Environment variables which are provided by the CF platform
BUILD_DIR="${1}"
CACHE_DIR="${2}"
DEPS_DIR="${3}"
DEPS_IDX="${4}"

BUILDPACK_DIR=$(dirname $(readlink -f ${BASH_SOURCE%/*}))
# Set custom environment variables, configured in parameters.sh
source ${BUILDPACK_DIR}/parameters.sh

# The Keycloak version can be overridden by specifying the version number in runtime.txt
# You can add comments to the runtime.txt when the line starts with `#`
# TODO: Remove this part, as we can override this with an env var in the CF manifest
if [ -f "${BUILD_DIR}/runtime.txt" ]
then
    KEYCLOAK_VERSION=$((grep -v '^#' "${BUILD_DIR}/runtime.txt" || true) | head -n1)
    if [ -z "${KEYCLOAK_VERSION}" ]
    then
        echo "ERROR> runtime.txt found but no version specified!"
        exit 1
    fi
fi

####################
# Download section #
####################

# Generic download function
# All downloads are stored in a temporary location, which is the 'CACHE_DIR'.
download () {
    DOWNLOAD_NAME="${1}"  # To identify the download. E.g. 'keycloak' or 'mysql driver'
    TARGET_FILE="${2}"    # How the download gets stored locally.
    DOWNLOAD_URL="${3}"   # This is what will be downloaded

    if [ -f "${CACHE_DIR}/${TARGET_FILE}" ]
    then
        echo "-----> Using ${TARGET_FILE} from cache"
    else
        echo "-----> Downloading ${DOWNLOAD_NAME}: ${DOWNLOAD_URL}"
        if ! wget -nv "${DOWNLOAD_URL}" -O "${CACHE_DIR}/${TARGET_FILE}" 2>&1 | sed 's/^/       /'
        then
            echo "ERROR> Download for ${DOWNLOAD_NAME} not found, URL=${KEYCLOAK_DOWNLOAD_URL}"
            exit 1
        fi
    fi
}

# This is where all required software is downloaded.
KEYCLOAK_DOWNLOAD_URL="https://downloads.jboss.org/keycloak/${KEYCLOAK_VERSION}/keycloak-${KEYCLOAK_VERSION}.tar.gz"
download "keycloak" "keycloak-${KEYCLOAK_VERSION}.tar.gz" "${KEYCLOAK_DOWNLOAD_URL}"

# NOT using the Java buldpack because, A) We want to control the Java version to keep it the same as that specified in
# the Keycloak Docker image and B) because if you use the Java buildpack it has to be the last one in the buildpack
# 'chain' and that would stop us from having Keycloak as the last buildpack, which would stop us from running Keycloak.
JDK_DOWNLOAD_URL="https://download.java.net/openjdk/jdk11/ri/openjdk-${OPENJDK_VERSION}_linux-x64_bin.tar.gz"
download "openjdk" "openjdk-${OPENJDK_VERSION}.tar.gz" "${JDK_DOWNLOAD_URL}"

MYSQL_DRIVER_DOWNLOAD_URL="https://repo1.maven.org/maven2/mysql/mysql-connector-java/$JDBC_MYSQL_VERSION/mysql-connector-java-$JDBC_MYSQL_VERSION.jar"
download "mysql driver" "mysql-connector-java-$JDBC_MYSQL_VERSION.jar" "${MYSQL_DRIVER_DOWNLOAD_URL}"

POSTGRES_DRIVER_DOWNLOAD_URL="https://repo1.maven.org/maven2/org/postgresql/postgresql/$JDBC_POSTGRES_VERSION/postgresql-$JDBC_POSTGRES_VERSION.jar"
download "postgres driver" "postgres-jdbc.jar" "${POSTGRES_DRIVER_DOWNLOAD_URL}"
